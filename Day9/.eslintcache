[{"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\reportWebVitals.js":"1","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Home.jsx":"2","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Movie.jsx":"3","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\App.js":"4","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Details.jsx":"5","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Gallery.jsx":"6","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\MovieModal.jsx":"7","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Navbar.jsx":"8","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\CommentList.jsx":"9","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Registration.jsx":"10"},{"size":375,"mtime":1606396686473,"results":"11","hashOfConfig":"12"},{"size":7003,"mtime":1606396686466,"results":"13","hashOfConfig":"12"},{"size":778,"mtime":1606396686468,"results":"14","hashOfConfig":"12"},{"size":1891,"mtime":1606398862096,"results":"15","hashOfConfig":"12"},{"size":1854,"mtime":1606396686344,"results":"16","hashOfConfig":"12"},{"size":1012,"mtime":1606396686465,"results":"17","hashOfConfig":"12"},{"size":5172,"mtime":1606396686469,"results":"18","hashOfConfig":"12"},{"size":2828,"mtime":1606396686470,"results":"19","hashOfConfig":"12"},{"size":1023,"mtime":1606396686342,"results":"20","hashOfConfig":"12"},{"size":3939,"mtime":1606400079549,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xjjkz0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\reportWebVitals.js",[],["48","49"],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Home.jsx",["50","51","52","53"],"import React, { Component } from \"react\";\r\nimport Gallery from \"./Gallery\";\r\n// import CommentListWithFetch from \"./CommentListWithFetch\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport MovieModal from \"./MovieModal\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    harryPotterMovies: [],\r\n    spiderManMovies: [],\r\n    starWarsMovies: [],\r\n    // selectedMovieID: null,\r\n    comments: [],\r\n    isModalOpen: false,\r\n    selectedMovieID: null,\r\n    loading: true,\r\n    error: false,\r\n  };\r\n\r\n  url = \"http://www.omdbapi.com/?apikey=85a2b045\";\r\n\r\n  handleSelectedMovie = (imdbID) => {\r\n    console.log(\"selected movie id changed\", imdbID);\r\n    this.setState({ selectedMovieID: imdbID });\r\n  };\r\n\r\n  fetchMovies = () => {\r\n    Promise.all([\r\n      fetch(this.url + \"&s=harry%20potter\")\r\n        .then((response) => response.json())\r\n        .then((responseObject) => {\r\n          this.setState({ harryPotterMovies: responseObject.Search }, () =>\r\n            console.log(this.state.harryPotterMovies)\r\n          );\r\n        }),\r\n      fetch(this.url + \"&s=spider%20man\")\r\n        .then((response) => response.json())\r\n        .then((responseObject) =>\r\n          this.setState({ spiderManMovies: responseObject.Search })\r\n        ),\r\n      fetch(this.url + \"&s=star%20wars\")\r\n        .then((response) => response.json())\r\n        .then((responseObject) =>\r\n          this.setState({ starWarsMovies: responseObject.Search })\r\n        ),\r\n    ])\r\n      .then(() => this.setState({ loading: false }))\r\n      .catch((err) => {\r\n        this.setState({ error: true });\r\n        console.log(\"An error has occurred:\", err);\r\n      });\r\n  };\r\n\r\n  fetchComments = async (movieID) => {\r\n    console.log(\"fetch\", movieID);\r\n\r\n    const url = \"https://striveschool-api.herokuapp.com/api/comments/\";\r\n\r\n    let response = await fetch(url + movieID, {\r\n      headers: new Headers({\r\n        Authorization:\r\n          \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI2NmUzNTk4MzViMDAwMTc1ODRlZWQiLCJpYXQiOjE2MDU4MjA1NjUsImV4cCI6MTYwNzAzMDE2NX0.mgz_c-3UHAribI3ogIYDAyR7XqpT7ZWCzSPHwrhU19w\",\r\n      }),\r\n    });\r\n\r\n    let comments = await response.json();\r\n\r\n    this.setState({ comments }, () =>\r\n      console.log(\"awaited comments\", this.state.comments)\r\n    );\r\n  };\r\n\r\n  handleOpenModal = (imdbID) => {\r\n    this.setState({ isModalOpen: true, selectedMovieID: imdbID });\r\n\r\n    this.fetchComments(imdbID);\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid px-4\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <div className=\"d-flex\">\r\n              <h2 className=\"mb-4\">TV Shows</h2>\r\n              <div className=\"dropdown ml-4 mt-1\">\r\n                <button\r\n                  className=\"btn btn-secondary btn-sm dropdown-toggle rounded-0\"\r\n                  type=\"button\"\r\n                  id=\"dropdownMenuButton\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                  style={{ backgroundColor: \"#221f1f\" }}\r\n                >\r\n                  Genres &nbsp;\r\n                </button>\r\n                <div\r\n                  className=\"dropdown-menu bg-dark\"\r\n                  aria-labelledby=\"dropdownMenuButton\"\r\n                >\r\n                  <a className=\"dropdown-item text-white bg-dark\" href=\"#\">\r\n                    Comedy\r\n                  </a>\r\n                  <a className=\"dropdown-item text-white bg-dark\" href=\"#\">\r\n                    Drama\r\n                  </a>\r\n                  <a className=\"dropdown-item text-white bg-dark\" href=\"#\">\r\n                    Thriller\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-none d-md-block\">\r\n              <i className=\"fa fa-th-large icons mr-2\"></i>\r\n              <i className=\"fa fa-th icons\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          {/* {this.state.selectedMovieID && (\r\n            <>\r\n              <CommentListWithFetch imdbID={this.state.selectedMovieID} />\r\n              <Button onClick={() => this.setState({ selectedMovieID: null })}>\r\n                Reset comments\r\n              </Button>\r\n            </>\r\n          )} */}\r\n\r\n          {this.state.error && (\r\n            <Alert variant=\"danger\" className=\"text-center\">\r\n              An error has occurred, please try again later\r\n            </Alert>\r\n          )}\r\n\r\n          {!this.state.error &&\r\n            (this.props.searchedMovies.length > 0 ||\r\n              this.props.searchedLoading === true) && (\r\n              <Gallery\r\n                title=\"Search Results\"\r\n                loading={this.props.searchedLoading}\r\n                movies={this.props.searchedMovies}\r\n                comments={this.state.comments}\r\n                fetchComments={this.fetchComments}\r\n                handleOpenModal={this.handleOpenModal}\r\n                // selectedMovieID={this.handleSelectedMovie}\r\n              />\r\n            )}\r\n\r\n          {!this.state.error &&\r\n            (!this.props.searchedMovies.length > 0 ||\r\n              this.props.searchedLoading === null) && (\r\n              <>\r\n                <Gallery\r\n                  title=\"Spider Man\"\r\n                  loading={this.state.loading}\r\n                  movies={this.state.spiderManMovies.slice(0, 6)}\r\n                  comments={this.state.comments}\r\n                  fetchComments={this.fetchComments}\r\n                  handleOpenModal={this.handleOpenModal}\r\n                  // selectedMovieID={this.handleSelectedMovie}\r\n                />\r\n                <Gallery\r\n                  title=\"Star Wars\"\r\n                  loading={this.state.loading}\r\n                  movies={this.state.starWarsMovies.slice(0, 6)}\r\n                  comments={this.state.comments}\r\n                  fetchComments={this.fetchComments}\r\n                  handleOpenModal={this.handleOpenModal}\r\n                  // selectedMovieID={this.handleSelectedMovie}\r\n                />\r\n                <Gallery\r\n                  title=\"Harry Potter\"\r\n                  loading={this.state.loading}\r\n                  movies={this.state.harryPotterMovies.slice(0, 6)}\r\n                  comments={this.state.comments}\r\n                  fetchComments={this.fetchComments}\r\n                  handleOpenModal={this.handleOpenModal}\r\n                  // selectedMovieID={this.handleSelectedMovie}\r\n                />\r\n              </>\r\n            )}\r\n          <MovieModal\r\n            isOpen={this.state.isModalOpen}\r\n            selectedMovieID={this.state.selectedMovieID}\r\n            comments={this.state.comments}\r\n            close={this.handleCloseModal}\r\n            fetchComments={this.fetchComments}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Movie.jsx",[],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\App.js",["54"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport Details from \"./components/Details\";\r\nimport Footer from \"./components/Footer\";\r\nimport Registration from \"./components/Registration\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = { searchedMovies: [], searchedLoading: null };\r\n\r\n  showSearchResult = (searchString) => {\r\n    this.setState({ searchedLoading: true });\r\n\r\n    fetch(`http://www.omdbapi.com/?apikey=85a2b045&s=${searchString}`)\r\n      .then((response) => response.json())\r\n      .then((responseObject) => {\r\n        if (responseObject.Response === \"True\") {\r\n          this.setState({\r\n            searchedMovies: responseObject.Search,\r\n          });\r\n        }\r\n        this.setState({ searchedLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ searchedLoading: null });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Navbar showSearchResult={this.showSearchResult} />\r\n          {/* <Home\r\n            searchedMovies={this.state.searchedMovies}\r\n            searchedLoading={this.state.searchedLoading}\r\n          /> */}\r\n\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(props) => (\r\n              <Home\r\n                {...props}\r\n                searchedMovies={this.state.searchedMovies}\r\n                searchedLoading={this.state.searchedLoading}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/details\" exact component={Details} />\r\n          <Route path=\"/details/:imdbID\" component={Details} />\r\n      \r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n   </> );\r\n  }\r\n}\r\n\r\nexport default App;\r\n",["55","56"],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Details.jsx",["57"],"import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    data: null,\r\n    title: null,\r\n    poster: null,\r\n    comments: [],\r\n  };\r\n\r\n  fetchComments = async (movieID) => {\r\n    const url = \"https://striveschool-api.herokuapp.com/api/comments/\";\r\n    const response = await fetch(url + movieID, {\r\n      headers: new Headers({\r\n        Authorization:\r\n          \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmI2NmUzNTk4MzViMDAwMTc1ODRlZWQiLCJpYXQiOjE2MDU4MjA1NjUsImV4cCI6MTYwNzAzMDE2NX0.mgz_c-3UHAribI3ogIYDAyR7XqpT7ZWCzSPHwrhU19w\",\r\n      }),\r\n    });\r\n\r\n    const comments = await response.json();\r\n\r\n    this.setState({ comments });\r\n  };\r\n\r\n  fetchData = async (movieID) => {\r\n    const url = \"http://www.omdbapi.com/\";\r\n    const response = await fetch(url + \"?apikey=85a2b045&i=\" + movieID);\r\n\r\n    const responseObject = await response.json();\r\n\r\n    this.setState({\r\n      data: responseObject,\r\n      poster: responseObject.Poster,\r\n      title: responseObject.Title,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData(this.props.match.params.imdbID);\r\n    this.fetchComments(this.props.match.params.imdbID);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col xs={\"auto\"}>\r\n            <Image src={this.state.poster} />\r\n          </Col>\r\n          <Col>\r\n            <h1 className=\"text-white\"> {this.state.title}</h1>\r\n            <h4 className=\"text-white\">\r\n              {this.state.data && this.state.data.Writer}\r\n            </h4>\r\n            <CommentList comments={this.state.comments} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Gallery.jsx",[],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\MovieModal.jsx",[],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Navbar.jsx",[],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\CommentList.jsx",[],"C:\\Users\\Enis Azizi\\documents\\github\\m4\\day9\\src\\components\\Registration.jsx",["58"],"import React from 'React';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass Registration extends React.Component {\r\n\r\n    state = {\r\n        formRegister:{\r\n            name:'',\r\n            surname:'',\r\n            email:'',\r\n            password:'',\r\n            yearOfBirth:'',\r\n            streetAddress:'',\r\n            city:'',\r\n            postalCode:'',\r\n\r\n\r\n        }\r\n    }\r\n\r\n    submitComment = ()=>{\r\n        e.preventDefault();\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.submitForm}>\r\n\t\t\t\t<Form.Group >\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\"\r\n                     placeholder=\"Write your name\"\r\n                     arial-label=\"name\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} />\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group >\r\n\t\t\t\t\t<Form.Label>Surname</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Write your surname\"\r\n                     arial-label=\"surname\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group >\r\n\r\n\t\t\t\t\t<Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                     type=\"email\"\r\n                     placeholder=\"Enter email\"\r\n                     arial-label=\"email\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group >\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" \r\n                    placeholder=\"Password\"\r\n                     arial-label=\"password\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group>\r\n\t\t\t\t\t<Form.Label>Year of birth</Form.Label>\r\n                    <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Write your birthdate\"\r\n                     arial-label=\"Yearofbirth\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group >\r\n\t\t\t\t\t<Form.Label>Street Address</Form.Label>\r\n                    <Form.Control\r\n                     placeholder=\"xxx this street\" \r\n                    arial-label=\"streetAdd\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group >\r\n\t\t\t\t\t<Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                    placeholder=\"Your city\" \r\n                    arial-label=\"city\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} /> />\r\n\t\t\t\t</Form.Group>\r\n               \r\n                <Form.Group >\r\n                 <Form.Label type=\"number\">Postal Code</Form.Label>\r\n                 <Form.Control \r\n                    arial-label=\"postalCode\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleCommentText}\r\n                    value={this.state.newComment.comment} />/>\r\n                 </Form.Group>\r\n\t\t\t\t\r\n\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Registration;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":17,"nodeType":"65","messageId":"66","endLine":4,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":110,"column":19,"nodeType":"69","endLine":110,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":113,"column":19,"nodeType":"69","endLine":113,"endColumn":76},{"ruleId":"67","severity":1,"message":"68","line":116,"column":19,"nodeType":"69","endLine":116,"endColumn":76},{"ruleId":"63","severity":1,"message":"70","line":8,"column":8,"nodeType":"65","messageId":"66","endLine":8,"endColumn":20},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":6,"column":10,"nodeType":"65","messageId":"66","endLine":6,"endColumn":14},{"ruleId":"74","severity":2,"message":"75","line":22,"column":9,"nodeType":"65","messageId":"76","endLine":22,"endColumn":10},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Registration' is defined but never used.",["77"],["78"],"'Link' is defined but never used.","no-undef","'e' is not defined.","undef","no-global-assign","no-unsafe-negation"]